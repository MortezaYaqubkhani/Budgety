[{"C:\\Users\\user\\Desktop\\JS\\budget\\src\\reportWebVitals.js":"1","C:\\Users\\user\\Desktop\\JS\\budget\\src\\App.js":"2","C:\\Users\\user\\Desktop\\JS\\budget\\src\\index.js":"3","C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\top.jsx":"4","C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\budget.jsx":"5","C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\common\\totalBudget.jsx":"6","C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\bottom.jsx":"7","C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\common\\expenseIncomeCard.jsx.jsx":"8","C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\middleForm.jsx":"9","C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\common\\form.jsx":"10","C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\common\\input.jsx":"11","C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\common\\select.jsx":"12","C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\common\\flushTable.jsx":"13","C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\barChart.jsx":"14","C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\componentSize.jsx":"15","C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\reactComponent.jsx":"16","C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\D3Component.jsx":"17","C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\FPieChart.jsx":"18","C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\resize.jsx":"19"},{"size":362,"mtime":1606146612682,"results":"20","hashOfConfig":"21"},{"size":173,"mtime":1607613702293,"results":"22","hashOfConfig":"21"},{"size":543,"mtime":1607974432591,"results":"23","hashOfConfig":"21"},{"size":1395,"mtime":1607977183914,"results":"24","hashOfConfig":"21"},{"size":2483,"mtime":1607791810704,"results":"25","hashOfConfig":"21"},{"size":592,"mtime":1607043403406,"results":"26","hashOfConfig":"21"},{"size":996,"mtime":1607787997714,"results":"27","hashOfConfig":"21"},{"size":723,"mtime":1607029717663,"results":"28","hashOfConfig":"21"},{"size":1177,"mtime":1607262580906,"results":"29","hashOfConfig":"21"},{"size":2154,"mtime":1607262425458,"results":"30","hashOfConfig":"21"},{"size":366,"mtime":1607262436215,"results":"31","hashOfConfig":"21"},{"size":587,"mtime":1607262474980,"results":"32","hashOfConfig":"21"},{"size":725,"mtime":1607790653676,"results":"33","hashOfConfig":"21"},{"size":2045,"mtime":1607779235096,"results":"34","hashOfConfig":"21"},{"size":1120,"mtime":1607766140735,"results":"35","hashOfConfig":"21"},{"size":1499,"mtime":1607620963457,"results":"36","hashOfConfig":"21"},{"size":1253,"mtime":1607621008367,"results":"37","hashOfConfig":"21"},{"size":2843,"mtime":1607791686104,"results":"38","hashOfConfig":"21"},{"size":2,"mtime":1607766593737,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1e7p22s",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\user\\Desktop\\JS\\budget\\src\\reportWebVitals.js",[],["87","88"],"C:\\Users\\user\\Desktop\\JS\\budget\\src\\App.js",[],"C:\\Users\\user\\Desktop\\JS\\budget\\src\\index.js",[],"C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\top.jsx",["89","90","91","92","93"],"C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\budget.jsx",["94","95","96","97","98","99"],"import React, {Component} from 'react';\r\nimport Top from './top';\r\nimport Middle from './middleForm';\r\nimport Bottom from './bottom';\r\nimport Table from './common/flushTable';\r\nimport BarChart from './barChart';\r\nimport ComponentSize from './componentSize';\r\nimport ReactComponent from './reactComponent';\r\n\r\nclass Budget extends Component {\r\n  state = {\r\n    expenses: [{expenseId: '', expenseSubject: '---', expenditure: 0}],\r\n    incomes: [{incomeId: '', incomeSubject: '---', reward: 0}],\r\n  };\r\n\r\n  //function to calculate the total expense\r\n  totalExpenses = () => {\r\n    let expenseTotal = 0;\r\n    this.state.expenses.forEach((element) => {\r\n      expenseTotal += element.expenditure;\r\n    });\r\n    return expenseTotal;\r\n  };\r\n  //function to calculate the total income\r\n  totalIncomes = () => {\r\n    let incomeTotal = 0;\r\n    this.state.incomes.forEach((element) => {\r\n      incomeTotal += element.reward;\r\n    });\r\n    return incomeTotal;\r\n  };\r\n\r\n  handleSubmit = (ev) => {\r\n    //if expense\r\n    if (ev.isIncome === 'false') {\r\n      let expenses = [...this.state.expenses];\r\n      let newExpense = {};\r\n\r\n      newExpense.expenseId = Date.now().toString();\r\n      newExpense.expenseSubject = ev.explanation;\r\n      newExpense.expenditure = parseInt(ev.value);\r\n      if (expenses.length === 1 && expenses[0].expenditure === 0) expenses = [];\r\n\r\n      expenses.push(newExpense);\r\n      this.setState({expenses});\r\n      console.log(this.state.expenses);\r\n    }\r\n    //income\r\n    if (ev.isIncome === 'true') {\r\n      let incomes = [...this.state.incomes];\r\n      let newIncome = {};\r\n\r\n      newIncome.incomeId = Date.now().toString();\r\n      newIncome.incomeSubject = ev.explanation;\r\n      newIncome.reward = parseInt(ev.value);\r\n      if (incomes.length === 1 && incomes[0].reward === 0) incomes = [];\r\n      incomes.push(newIncome);\r\n      this.setState({incomes});\r\n      console.log(this.state.incomes);\r\n    }\r\n  };\r\n  //function for doing actions on the original list\r\n  onAction = (cla) => {\r\n    console.log();\r\n  };\r\n  render() {\r\n    //object restructuring\r\n    const {expenses, incomes} = this.state;\r\n    return (\r\n      <div>\r\n        <Top\r\n          totalExpense={this.totalExpenses()}\r\n          totalIncome={this.totalIncomes()}\r\n          data={this.state.expenses}\r\n        />\r\n        <Middle onAction={this.handleSubmit} />\r\n        <Bottom data={this.state} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Budget;\r\n//ezafe kardane unique be joi\r\n","C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\common\\totalBudget.jsx",[],"C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\bottom.jsx",["100","101","102","103","104","105","106"],"import React, {Component, useState, useEffect, useRef} from 'react';\r\nimport FlushTable from './common/flushTable';\r\nimport BarChart from './barChart';\r\nimport ComponentSize from './componentSize';\r\nimport Piechart from './FPieChart';\r\nimport Resize from './resize';\r\nimport useResizeObserver from 'use-resize-observer';\r\n\r\nconst Bottom = ({data}) => {\r\n  const svgRef = useRef();\r\n  const {width, height} = useResizeObserver({\r\n    ref: svgRef,\r\n  });\r\n  return (\r\n    <div className=\"container\">\r\n      {width}\r\n      <div className=\"row\">\r\n        <div className=\"col-6 \" ref={svgRef}>\r\n          <Piechart width={width} data={data.expenses} />\r\n        </div>\r\n        <div className=\"col-6 \">\r\n          <Piechart width={width} data={data.incomes} />\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <FlushTable type=\"expense\" data={data.expenses} />\r\n        <FlushTable type=\"income\" data={data.incomes} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bottom;\r\n","C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\common\\expenseIncomeCard.jsx.jsx",[],"C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\middleForm.jsx",["107"],"import React, {Component} from 'react';\r\nimport Form from './common/form';\r\nimport Joi from 'joi-browser';\r\n\r\nclass Middle extends Form {\r\n  state = {\r\n    data: {explanation: '', value: '', isIncome: ''},\r\n    errors: {},\r\n  };\r\n  //\r\n  //schema for validation purposes\r\n  schema = {\r\n    explanation: Joi.string().required().label('Description').min(8),\r\n    value: Joi.number().min(0).required().label('Value'),\r\n    isIncome: Joi.boolean()\r\n  };\r\n  //\r\n\r\n  doSubmit = () => {\r\n    //call the server\r\n    console.log(this.state.data);\r\n    this.props.onAction(this.state.data)\r\n  };\r\n  //\r\n  render() {\r\n    //\r\n    return (\r\n      <div className=\"add\">\r\n        <div className=\"container\">\r\n          {/* {errors} */}\r\n          {/* <form onSubmit={() => this.props.onAction(this.state.data)} className=\"row\"> */}\r\n          <form onSubmit={this.handleSubmit} className=\"row\">\r\n            {this.renderSelect('isIncome', '', ['+', '-'])}\r\n            {this.renderInput('value', '', 'number')}\r\n            {this.renderInput('explanation')}\r\n            {this.renderButton('Save')}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Middle;\r\n","C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\common\\form.jsx",[],"C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\common\\input.jsx",[],"C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\common\\select.jsx",[],"C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\common\\flushTable.jsx",["108"],"import React from 'react';\r\nimport BarChart from '../barChart';\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\n\r\nconst FlushTable = ({type, data}) => {\r\n  //\r\n\r\n  //\r\n  if (type === \"expense\")\r\n  return (\r\n    <div className=\"col\" >\r\n      <ListGroup variant=\"flush\">\r\n        {data.map((item) => (\r\n          <ListGroup.Item>{item.expenseSubject}</ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n  if (type === \"income\")\r\n  return (\r\n    <div className=\"col\">\r\n      <ul className=\"list-group list-group-flush m-3\">\r\n        {data.map((item) => (\r\n          <li className=\"list-group-item\">{item.incomeSubject}</li>\r\n        ))}\r\n      </ul>\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlushTable;\r\n","C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\barChart.jsx",["109","110","111"],"import React, {Component} from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nclass BarChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n  }\r\n  async componentDidMount() {\r\n    const data = [\r\n      {lable: 'number1', value: 10},\r\n      {lable: 'number2', value: 20},\r\n      {lable: 'number3', value: 30},\r\n      {lable: 'number4', value: 400},\r\n    ];\r\n  }\r\n\r\n  drawBarChart(data) {\r\n    console.log(this.myRef);\r\n    const {width, height} = this.props;\r\n\r\n    const colorScale = d3\r\n      .scaleSequential()\r\n      .interpolator(d3.interpolateCool)\r\n      .domain([5, data.length]);\r\n    // Remove the old svg\r\n    d3.select(this.refs.canvas).select('svg').remove();\r\n    //\r\n    const svg = d3\r\n      .select(this.refs.canvas)\r\n      .append('svg')\r\n      .attr('width', '100%')\r\n      .attr('height', '100%')\r\n      .style('border', '1px solid black')\r\n      .append('g')\r\n      .attr('transform', `translate(${100}, ${0})`);\r\n    //arc  generator, one of the generators\r\n    const arcGenerator = d3.arc().innerRadius(0).outerRadius(100);\r\n    //pie generator\r\n    const pieGenerator = d3\r\n      .pie()\r\n      .padAngle(0)\r\n      .value((d) => d.expenditure);\r\n    //arc\r\n    const arc = svg.selectAll().data(pieGenerator(data)).enter();\r\n    // Append sectors\r\n    arc\r\n      .append('path')\r\n      .attr('d', arcGenerator)\r\n      .style('fill', (_, i) => colorScale(i))\r\n      .style('stroke', 'white')\r\n      .style('stroke-width', 2);\r\n    // Append text labels\r\n    arc\r\n      .append('text')\r\n      .attr('text-anchor', 'middle')\r\n      .attr('alignment-baseline', 'middle')\r\n      .text((d, i) => i + 1)\r\n      .style('fill', '#ffffff')\r\n      .attr('transform', (d) => {\r\n        const [x, y] = arcGenerator.centroid(d);\r\n        return `translate(${x}, ${y})`;\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <svg  id='container' className=\"col border first-pie\" ref=\"canvas\">\r\n        {this.drawBarChart(this.props.data)}\r\n      </svg>\r\n    );\r\n  }\r\n}\r\nexport default BarChart;\r\n","C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\componentSize.jsx",["112","113","114"],"import * as React from 'react';\r\nimport useResizeObserver from '@react-hook/resize-observer';\r\nimport {Component} from 'react';\r\nimport * as d3 from 'd3';\r\nimport GsvCopmonent from './resize';\r\n////////////////////////////////\r\nconst useSize = (target) => {\r\n  const [size, setSize] = React.useState();\r\n\r\n  React.useLayoutEffect(() => {\r\n    setSize(target.current.getBoundingClientRect());\r\n  }, [target]);\r\n\r\n  // Where the magic happens\r\n  useResizeObserver(target, (entry) => setSize(entry.contentRect));\r\n  return size;\r\n};\r\n///////////////////////////////\r\n///////////////////////////////\r\n///////////////////////////////\r\n//main component\r\nconst ComponentSize = ({data}) => {\r\n  //\r\n  const target = React.useRef(null);\r\n  const size = useSize(target);\r\n\r\n  React.useEffect(() => {\r\n    if (data && target.current) console.log(size);\r\n  }, [data, target.current]);\r\n\r\n  return (\r\n    <div ref={target} className=\"App\">\r\n      <h1>useResizeObserver() </h1>\r\n        \r\n      {size?.width}\r\n      <GsvCopmonent width={size?.width} height={size?.width -30} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComponentSize;\r\n","C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\reactComponent.jsx",["115"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport D3Component from './D3Component';\r\n\r\nlet vis;\r\n\r\nexport default function ReactComponent() {\r\n  const [data, setData] = useState(null);\r\n  const [width, setWidth] = useState(600);\r\n  const [height, setHeight] = useState(600);\r\n  const [active, setActive] = useState(null);\r\n  const refElement = useRef(null);\r\n\r\n  useEffect(fetchData, []);\r\n  useEffect(handleResizeEvent, []);\r\n  useEffect(initVis, [ data ]);\r\n  useEffect(updateVisOnResize, [ width, height ]);\r\n\r\n  function fetchData() {\r\n    Promise.resolve().then(() => setData(['a', 'b', 'c']));\r\n  }\r\n\r\n  function handleResizeEvent() {\r\n    let resizeTimer;\r\n    const handleResize = () => {\r\n      clearTimeout(resizeTimer);\r\n      resizeTimer = setTimeout(function() {\r\n        setWidth(window.innerWidth);\r\n        setHeight(window.innerHeight);\r\n      }, 300);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }\r\n\r\n  function initVis() {\r\n    if(data && data.length) {\r\n      const d3Props = {\r\n        data,\r\n        width,\r\n        height,\r\n        onDatapointClick: setActive\r\n      };\r\n      vis = new D3Component(refElement.current, d3Props);\r\n    }\r\n  }\r\n\r\n  function updateVisOnResize() {\r\n    vis && vis.resize(width, height);\r\n  }\r\n\r\n  return (\r\n    <div className='react-world'>\r\n      <div>{active}</div>\r\n      <div ref={refElement}/>\r\n    </div>\r\n  );\r\n}","C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\D3Component.jsx",[],"C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\FPieChart.jsx",["116","117","118"],"import React, {useState, useEffect, useRef} from 'react';\r\nimport * as d3 from 'd3';\r\nimport useResizeObserver from 'use-resize-observer';\r\n\r\nexport default function Piechart({data, width}) {\r\n  //   const [data, setData] = useState([7,8, 80, 9, 12, 13, 10, 11, 12]);\r\n  //   const [wid, setWid] = React.useState(width);\r\n  //   setWid = () => {\r\n  //     wid = this.props.width;\r\n  //   };\r\n  const svgRef = useRef();\r\n  //\r\n  //a function for identifying the type of dataset\r\n  const incomeExport = (object) => {\r\n    console.log(data[0]);\r\n    for (const key in data[0]) if (key === 'reward') return 'reward';\r\n    return 'expenditure';\r\n  };\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    //   const {data} = this.props\r\n    const IncomeOrExpense = incomeExport(data[0]);\r\n\r\n    // const {width} = this.props;\r\n    const colorScale = d3\r\n      .scaleSequential()\r\n      .interpolator(d3.interpolateCool)\r\n      .domain([5, data.length]);\r\n    //removing svg\r\n\r\n    //   d3.select(\"svg\").empty();\r\n    d3.select(svgRef.current).select('*').remove();\r\n    //draw svg\r\n    const svg = d3\r\n      .select(svgRef.current)\r\n      .attr('id', 'the_SVG_ID')\r\n      .attr('width', `${width}px`)\r\n      .attr('height', `${width}px`)\r\n      .style('border', '0px solid black')\r\n      .append('g')\r\n      .attr('transform', `translate(${width / 2}, ${width / 2})`);\r\n\r\n    // svg\r\n    //   .selectAll('rect')\r\n    //   .data(data)\r\n    //   .transition()\r\n    //   .duration(3000)\r\n    //   .attr('width', wid)\r\n    //   .attr('height', hei)\r\n\r\n    //   .attr('stroke', 'red')\r\n    //   .attr('stroke-width', '3')\r\n    //   .attr('fill', 'transparent');\r\n\r\n    //arc  generator, one of the generators\r\n    const arcGenerator = d3\r\n      .arc()\r\n      .innerRadius(0)\r\n      .outerRadius(width / 2 - 30);\r\n    //pie generator\r\n    const pieGenerator = d3\r\n      .pie()\r\n      .padAngle(0)\r\n      .value((d) => (d[IncomeOrExpense] === 0) ? 1 : d[IncomeOrExpense] );\r\n    //arc\r\n    //remove the pie chart\r\n    //add the new svg\r\n    const arc = svg.selectAll().data(pieGenerator(data)).enter();\r\n    // Append sectors\r\n    arc\r\n      .append('path')\r\n      .attr('d', arcGenerator)\r\n      .style('fill', (_, i) => colorScale(i))\r\n      .style('stroke', 'white')\r\n      .style('stroke-width', 1)\r\n      .attr('x', 10)\r\n      .attr('y', 20)\r\n      .merge(arc)\r\n      .transition()\r\n      .duration(1000);\r\n\r\n    arc\r\n      .append('text')\r\n      .attr('text-anchor', 'middle')\r\n      .attr('alignment-baseline', 'middle')\r\n      .text((d, i) => i + 1)\r\n      .style('fill', '#ffffff')\r\n      .attr('transform', (d) => {\r\n        const [x, y] = arcGenerator.centroid(d);\r\n        return `translate(${x}, ${y})`;\r\n      });\r\n    //the last piece is actually about the re-rendering conditions\r\n  }, [width, data]);\r\n\r\n  return <svg id=\"svg-chart\" ref={svgRef}></svg>;\r\n}\r\n","C:\\Users\\user\\Desktop\\JS\\budget\\src\\components\\resize.jsx",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":19},{"ruleId":"123","severity":1,"message":"127","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":16},{"ruleId":"123","severity":1,"message":"128","line":5,"column":9,"nodeType":"125","messageId":"126","endLine":5,"endColumn":15},{"ruleId":"129","severity":1,"message":"130","line":9,"column":3,"nodeType":"131","messageId":"132","endLine":14,"endColumn":4},{"ruleId":"123","severity":1,"message":"133","line":19,"column":11,"nodeType":"125","messageId":"126","endLine":19,"endColumn":16},{"ruleId":"123","severity":1,"message":"134","line":5,"column":8,"nodeType":"125","messageId":"126","endLine":5,"endColumn":13},{"ruleId":"123","severity":1,"message":"127","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":16},{"ruleId":"123","severity":1,"message":"135","line":7,"column":8,"nodeType":"125","messageId":"126","endLine":7,"endColumn":21},{"ruleId":"123","severity":1,"message":"136","line":8,"column":8,"nodeType":"125","messageId":"126","endLine":8,"endColumn":22},{"ruleId":"123","severity":1,"message":"137","line":68,"column":12,"nodeType":"125","messageId":"126","endLine":68,"endColumn":20},{"ruleId":"123","severity":1,"message":"138","line":68,"column":22,"nodeType":"125","messageId":"126","endLine":68,"endColumn":29},{"ruleId":"123","severity":1,"message":"139","line":1,"column":16,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"140","line":1,"column":27,"nodeType":"125","messageId":"126","endLine":1,"endColumn":35},{"ruleId":"123","severity":1,"message":"141","line":1,"column":37,"nodeType":"125","messageId":"126","endLine":1,"endColumn":46},{"ruleId":"123","severity":1,"message":"127","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":16},{"ruleId":"123","severity":1,"message":"135","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":21},{"ruleId":"123","severity":1,"message":"142","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":14},{"ruleId":"123","severity":1,"message":"143","line":11,"column":17,"nodeType":"125","messageId":"126","endLine":11,"endColumn":23},{"ruleId":"123","severity":1,"message":"139","line":1,"column":16,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"127","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":16},{"ruleId":"123","severity":1,"message":"144","line":10,"column":11,"nodeType":"125","messageId":"126","endLine":10,"endColumn":15},{"ruleId":"123","severity":1,"message":"145","line":20,"column":12,"nodeType":"125","messageId":"126","endLine":20,"endColumn":17},{"ruleId":"123","severity":1,"message":"143","line":20,"column":19,"nodeType":"125","messageId":"126","endLine":20,"endColumn":25},{"ruleId":"123","severity":1,"message":"139","line":3,"column":9,"nodeType":"125","messageId":"126","endLine":3,"endColumn":18},{"ruleId":"123","severity":1,"message":"146","line":4,"column":13,"nodeType":"125","messageId":"126","endLine":4,"endColumn":15},{"ruleId":"147","severity":1,"message":"148","line":29,"column":6,"nodeType":"149","endLine":29,"endColumn":28,"suggestions":"150"},{"ruleId":"147","severity":1,"message":"151","line":15,"column":22,"nodeType":"149","endLine":15,"endColumn":30,"suggestions":"152"},{"ruleId":"123","severity":1,"message":"140","line":1,"column":16,"nodeType":"125","messageId":"126","endLine":1,"endColumn":24},{"ruleId":"123","severity":1,"message":"153","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":25},{"ruleId":"147","severity":1,"message":"154","line":95,"column":6,"nodeType":"149","endLine":95,"endColumn":19,"suggestions":"155"},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'TotalBudget' is defined but never used.","Identifier","unusedVar","'BarChart' is defined but never used.","'Button' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'total' is assigned a value but never used.","'Table' is defined but never used.","'ComponentSize' is defined but never used.","'ReactComponent' is defined but never used.","'expenses' is assigned a value but never used.","'incomes' is assigned a value but never used.","'Component' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Resize' is defined but never used.","'height' is assigned a value but never used.","'data' is assigned a value but never used.","'width' is assigned a value but never used.","'d3' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'size'. Either include it or remove the dependency array. Mutable values like 'target.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["158"],"React Hook useEffect has missing dependencies: 'height' and 'width'. Either include them or remove the dependency array.",["159"],"'useResizeObserver' is defined but never used.","React Hook useEffect has a missing dependency: 'incomeExport'. Either include it or remove the dependency array.",["160"],"no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [data, size]",{"range":"167","text":"168"},"Update the dependencies array to be: [data, height, width]",{"range":"169","text":"170"},"Update the dependencies array to be: [width, data, incomeExport]",{"range":"171","text":"172"},[848,870],"[data, size]",[466,474],"[data, height, width]",[2770,2783],"[width, data, incomeExport]"]